// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  username String @id
  nickname String
  email String @unique
  password String
  profilePicture Json
  banner Json
  description String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts Posts[]
  userPost PostsUsersOptions[]
  followerUser UsersFollows[] @relation("FollowerUser")
  followingUser UsersFollows[] @relation("FollowingUser")

  @@index([username, nickname, email])
}

model UsersFollows {
  followerUser Users @relation("FollowerUser", fields: [followerUserId], references: [username])
  followerUserId String
  followingUser Users @relation("FollowingUser", fields: [followingUserId], references: [username])
  followingUserId String

  @@id([followerUserId, followingUserId])
  @@index([followerUserId, followingUserId])
}

model Posts {
  id Int @id @default(autoincrement())
  media Json?
  title String
  user Users @relation(fields: [userId], references: [username])
  userId String
  createdAt DateTime @default(now())
  postUser PostsUsersOptions[]

  @@index([id, title])
}

model PostsUsersOptions {
  id Int @id @default(autoincrement())
  user Users @relation(fields: [userId], references: [username])
  userId String
  post Posts @relation(fields: [postId], references: [id])
  postId Int
  liked Boolean @default(false)
  favorited Boolean @default(false)
  postsComments PostsComments[]

  @@index([id, userId, postId, favorited])
}

model PostsComments {
  id Int @id @default(autoincrement())
  postUserOptions PostsUsersOptions @relation(fields: [postUserOptionsId], references: [id])
  postUserOptionsId Int
  comment String
  createdAt DateTime @default(now())

  @@index([id, postUserOptionsId, comment])
}